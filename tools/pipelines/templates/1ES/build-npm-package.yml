# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# build-npm-package template to build NPM packages/projects

parameters:
  - name: buildDirectory
    type: string

  - name: taskBuild
    type: string
    default: ci:build

  - name: taskBuildDocs
    type: boolean
    default: true

  - name: publishDocs
    type: boolean
    default: false

  - name: taskLint
    type: boolean
    default: true

  - name: taskLintName
    type: string
    default: lint

  - name: taskTest
    type: object
    default:
      - ci:test

  # A list of directories (under the buildDirectory) to run the PublishTestResults task on in separate steps.
  # Used to avoid the force merge limit of 100 result files.
  - name: testResultDirs
    type: object
    default:
      - nyc

  - name: taskBundleAnalysis
    type: boolean
    default: false

  - name: taskPublishBundleSizeArtifacts
    type: boolean
    default: false

  - name: taskPack
    type: boolean
    default: true

  - name: poolCG
    type: object
    default: Small-1ES

  - name: poolBuild
    type: object
    default: Small-1ES

  - name: preCG
    type: stepList
    default: []

  - name: cgSubDirectory
    type: string
    default:

  - name: checkoutSubmodules
    type: boolean
    default: false

  - name: buildNumberInPatch
    type: string
    default:

  - name: publishOverride
    type: string

  - name: releaseBuildOverride
    type: string

  - name: tagName
    type: string

  - name: isReleaseGroup
    type: boolean
    default: false

  - name: includeInternalVersions
    type: boolean
    default: false

  - name: buildToolsVersionToInstall
    type: string
    default: repo

  - name: packageManager
    type: string
    default: npm

  # Parameter for modifying the 'types' field in the package.json.
  # If the value 'none' is provided, the 'types' field in package.json will remain unchanged.
  - name: packageTypesOverride
    type: string
    default: none

  - name: packageManagerInstallCommand
    type: string
    default: 'npm ci --unsafe-perm'

  - name: additionalBuildSteps
    type: stepList
    default: []

  # The semver range constraint to use for interdependencies; that is, dependencies on other packages within the release
  # group
  - name: interdependencyRange
    type: string
    default: "^"

  # A list of scripts that execute checks of the release group, e.g. prettier, syncpack, etc. These will be run serially
  # in a pipeline stage separate from the build stage.
  - name: checks
    type: object
    default: []

  - name: telemetry
    type: boolean
    default: false

resources:
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/heads/user/dannyvv/test-taggingchange

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: NewLarge-linux-1ES
      os: linux
    sdl:
      arrow:
        # This is the service connection for the Arrow Service Connection in FluidFramework Azure DevOps organization
        # Currently we want to use different names for internal and public builds for Arrow Service Connection
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          serviceConnection: Arrow_FluidFramework_internal
        ${{ else }}:
          serviceConnection: Arrow_FluidFramework_public
      sourceAnalysisPool:
        name: Azure-Pipelines-1ESPT-ExDShared
        image: windows-2022
        os: windows
    settings:
      skipBuildTags: true
    customBuildTags:
      - ES365AIMigrationTooling
    stages:
      - ${{ if ne(convertToJson(parameters.checks), '[]') }}:
          - template: /tools/pipelines/templates/1ES/include-policy-check.yml@self
            parameters:
              buildDirectory: '${{ parameters.buildDirectory }}'
              checks: '${{ parameters.checks }}'
              # Install all dependencies, not just the root ones
              dependencyInstallCommand: pnpm install --frozen-lockfile

      # Install / Build / Test Stage
      - stage: build
        displayName: Build Stage
        dependsOn: [] # this stage doesn't depend on preceding stage

        jobs:
          # Job - Build
          - job: build
            displayName: Build
            variables:
              # We use 'chalk' to colorize output, which auto-detects color support in the
              # running terminal. The log output shown in Azure DevOps job runs only has
              # basic ANSI color support though, so force that in the pipeline
              - name: FORCE_COLOR
                value: 1
              - template: /tools/pipelines/templates/1ES/include-vars.yml@self
                parameters:
                  publishOverride: '${{ parameters.publishOverride }}'
                  releaseBuildOverride: '${{ parameters.releaseBuildOverride }}'
                  buildNumberInPatch: '${{ parameters.buildNumberInPatch }}'
              - group: ado-feeds
              - name: testCoverage
                value: ${{ ne(variables['Build.Reason'], 'PullRequest') }}
              - name: releaseBuildVar
                value: '$[variables.releaseBuild]'
              - ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
                - name: targetBranchName
                  value: $(System.PullRequest.TargetBranch)
              # Absolute path to the folder that contains the source code for the telemetry-generator package, which is
              # used in a few places in the pipeline to push custom telemetry to Kusto.
              - name: absolutePathToTelemetryGenerator
                value: $(Build.SourcesDirectory)/tools/telemetry-generator
                readonly: true
            steps:
              # Setup
              - checkout: self
                clean: true
                lfs: '${{ parameters.checkoutSubmodules }}'
                submodules: '${{ parameters.checkoutSubmodules }}'

